{"ast":null,"code":"import _classCallCheck from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/src/App.js\";\n// 1. CREAR UN TABLA DE PRESUPUESTO ANUAL (BUDGET + 12 MESES CON INCOME, EXPENSES, RESULT)\n// 2. CAMPOS MODIFICABLES\n// 3. Campos calculados automaticamente en linea\n// 4. Se trae de la base de datos, como datos precargados\n// 5. SE MUESTRE EL ARRAY GRABADO DE LA BASE DE DATOS\n// 4. SE GUARDE EN UNA BASE DE DATOS LOS CAMBIOS MONGODB\n// DESEABLES\n// PLATILLA POR USUARIO\n// PLANTILLA POR AÃ‘O\n// PLANTILLA EN LA QUE SE PUEDAN AGREGAR MAS FILAS PARA CALCULOS DETALLADOS\n// PODER IMPRIMIR A PDF EL FORMATO\n// FORMATO CON OTRAS CARACTERISTICAS\n// GRAFICAR FORMATO\n// AQUI EL COMPONENTE PRINCIPAL\nimport React, { Component } from \"react\";\nimport update from 'react-addons-update'; // ES6\n\nimport API from \"./utils/API\";\nimport \"./App.css\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nvar Recharts = {\n  LineChart: LineChart,\n  Line: Line,\n  XAxis: XAxis,\n  YAxis: YAxis,\n  CartesianGrid: CartesianGrid,\n  Tooltip: Tooltip,\n  Legend: Legend\n};\nvar data = [{\n  name: 'Page A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: 'Page C',\n  uv: 2000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: 'Page D',\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: 'Page E',\n  uv: 1890,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: 'Page F',\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: 'Page G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.loadBudget = function () {\n      API.getBudget().then(function (res) {\n        _this.setState({\n          mainarray: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var target = event.target;\n      var value = parseFloat(target.value);\n      var month = target.dataset.month;\n      var newstate = {};\n\n      if (target.name === \"income\") {\n        newstate[month.toString()] = {\n          income: {\n            $set: value\n          }\n        };\n      } else {\n        newstate[month.toString()] = {\n          expense: {\n            $set: value\n          }\n        };\n      }\n\n      _this.setState({\n        mainarray: update(_this.state.mainarray, newstate)\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      API.updateBudget() // aqui mando el objeto como esta en el dom para actualizar\n      .then(function (res) {\n        return _this.loadBudget();\n      }) // con el resultado reresamos el json actualizado y lo carga\n      .catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      mainarray: [{\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }]\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBudget();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // CALCULOS\n      var xincome = 0;\n      var x1 = 0;\n      var x2 = 0;\n      var xexpense = 0;\n      var i;\n\n      for (i = 1; i < this.state.mainarray.length; i++) {\n        x1 += parseFloat(this.state.mainarray[i].income);\n        xincome = (x1 / 12).toFixed(2);\n        x2 += parseFloat(this.state.mainarray[i].expense);\n        xexpense = (x2 / 12).toFixed(2);\n      }\n\n      ; // loop para encabezados\n\n      var rows = [];\n\n      for (var _i = 1; _i < 13; _i++) {\n        rows.push(React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"theader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, this.state.mainarray[_i].month.toUpperCase()));\n      } // loop para income\n\n\n      var rowsincome = [];\n\n      for (var _i2 = 0; _i2 < 13; _i2++) {\n        rowsincome.push(React.createElement(\"td\", {\n          className: \"resPath\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          className: \"inputSquare\",\n          name: \"income\",\n          \"data-month\": _i2,\n          value: this.state.mainarray[_i2].income,\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        })));\n      } // loop para expense\n\n\n      var rowsexpense = [];\n\n      for (var _i3 = 0; _i3 < 13; _i3++) {\n        rowsexpense.push(React.createElement(\"td\", {\n          className: \"resPath\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          className: \"inputSquare\",\n          name: \"expense\",\n          \"data-month\": _i3,\n          value: this.state.mainarray[_i3].expense,\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        })));\n      } // loop results income - expense\n\n\n      var rowsresult = [];\n\n      for (var _i4 = 0; _i4 < 13; _i4++) {\n        rowsresult.push(React.createElement(\"td\", {\n          className: \"resPath\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, this.state.mainarray[_i4].income - this.state.mainarray[_i4].expense));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"alert alert-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"PERSONAL FINANCE\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit All\",\n        className: \"btn btn-success\",\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })), React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, this.state.mainarray[0].month.toUpperCase()), rows, React.createElement(\"th\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"AVERAGE\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"resPath\",\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"INCOME\"), rowsincome, React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, xincome)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"EXPENSES\"), rowsexpense, React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, xexpense), React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      })), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"resPath\",\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"SAVINGS\"), rowsresult, React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      })))))), React.createElement(\"div\", {\n        className: \"alert alert-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"2018\")))), React.createElement(\"nav\", {\n        className: \"navbar navbar-expand-lg navbar-dark bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(LineChart, {\n        width: 600,\n        height: 300,\n        data: data,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"pv\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        strokeDasharray: \"5 5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"uv\",\n        stroke: \"#82ca9d\",\n        strokeDasharray: \"3 4 5 2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/egomezmo/Bootcamp/AAA/BUDGET/client/src/App.js"],"names":["React","Component","update","API","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Recharts","data","name","uv","pv","amt","App","props","loadBudget","getBudget","then","res","setState","mainarray","catch","err","console","log","handleInputChange","event","target","value","parseFloat","month","dataset","newstate","toString","income","$set","expense","state","handleFormSubmit","preventDefault","updateBudget","bind","xincome","x1","x2","xexpense","i","length","toFixed","rows","push","toUpperCase","rowsincome","rowsexpense","rowsresult","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["// 1. CREAR UN TABLA DE PRESUPUESTO ANUAL (BUDGET + 12 MESES CON INCOME, EXPENSES, RESULT)\n// 2. CAMPOS MODIFICABLES\n// 3. Campos calculados automaticamente en linea\n// 4. Se trae de la base de datos, como datos precargados\n// 5. SE MUESTRE EL ARRAY GRABADO DE LA BASE DE DATOS\n\n// 4. SE GUARDE EN UNA BASE DE DATOS LOS CAMBIOS MONGODB\n\n// DESEABLES\n// PLATILLA POR USUARIO\n// PLANTILLA POR AÃ‘O\n// PLANTILLA EN LA QUE SE PUEDAN AGREGAR MAS FILAS PARA CALCULOS DETALLADOS\n// PODER IMPRIMIR A PDF EL FORMATO\n// FORMATO CON OTRAS CARACTERISTICAS\n// GRAFICAR FORMATO\n\n\n// AQUI EL COMPONENTE PRINCIPAL\n\n\nimport React, { Component } from \"react\";\nimport update from 'react-addons-update'; // ES6\nimport API from \"./utils/API\";\nimport \"./App.css\";\n\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\n\n\nconst Recharts = { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend };\nconst data = [\n  { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\n  { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\n  { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\n  { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\n  { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\n  { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\n  { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      mainarray: [\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        }, {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        }\n      ]\n\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadBudget();\n  }\n\n  loadBudget = () => {\n    API.getBudget()\n      .then(res => { this.setState({ mainarray: res.data }) })\n      .catch(err => console.log(err));\n  };\n\n  // PARA INGRESAR LOS CAMBIOS DE CADA CAMPO\n  handleInputChange = event => {\n    const target = event.target;\n    const value = parseFloat(target.value);\n    const month = target.dataset.month;\n    let newstate = {};\n    if (target.name === \"income\") {\n      newstate[month.toString()] = { income: { $set: value } };\n    }\n    else {\n      newstate[month.toString()] = { expense: { $set: value } };\n    }\n    this.setState({\n      mainarray: update(this.state.mainarray, newstate)\n    })\n  }\n\n  // SUBIR TODO EL FORMARTO CON EL BOTON\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.updateBudget()\n\n\n      // aqui mando el objeto como esta en el dom para actualizar\n\n\n\n      .then(res => this.loadBudget())       // con el resultado reresamos el json actualizado y lo carga\n      .catch(err => console.log(err));\n  };\n\n  render() {\n\n    // CALCULOS\n\n    let xincome = 0;\n    let x1 = 0;\n    let x2 = 0;\n    let xexpense = 0;\n    let i;\n    for (i = 1; i < this.state.mainarray.length; i++) {\n      x1 += parseFloat(this.state.mainarray[i].income);\n      xincome = (x1 / 12).toFixed(2);\n      x2 += parseFloat(this.state.mainarray[i].expense);\n      xexpense = (x2 / 12).toFixed(2);\n    };\n\n    // loop para encabezados\n    let rows = [];\n    for (let i = 1; i < 13; i++) {\n      rows.push(<th scope=\"col\" className=\"theader\">{this.state.mainarray[i].month.toUpperCase()}</th>);\n    }\n\n    // loop para income\n    let rowsincome = [];\n    for (let i = 0; i < 13; i++) {\n      rowsincome.push(<td className=\"resPath\"><input type=\"number\" className=\"inputSquare\" name=\"income\" data-month={i} value={this.state.mainarray[i].income} onChange={this.handleInputChange} /></td>);\n    }\n\n    // loop para expense\n    let rowsexpense = [];\n    for (let i = 0; i < 13; i++) {\n      rowsexpense.push(<td className=\"resPath\"><input type=\"number\" className=\"inputSquare\" name=\"expense\" data-month={i} value={this.state.mainarray[i].expense} onChange={this.handleInputChange} /></td>);\n    }\n\n    // loop results income - expense\n    let rowsresult = [];\n    for (let i = 0; i < 13; i++) {\n      rowsresult.push(<td className=\"resPath\">{this.state.mainarray[i].income - this.state.mainarray[i].expense}</td>);\n    }\n\n    return (\n      <div>\n\n        <br />\n        <div className=\"container\">\n          <div className=\"alert alert-primary\">\n            <h2>PERSONAL FINANCE</h2>\n          </div>\n          <div>\n            <form>\n              <table className=\"table table-sm\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\"><input type=\"submit\" value=\"Submit All\" className=\"btn btn-success\" onClick={this.handleFormSubmit} /></th>\n                    <th scope=\"col\" className=\"resPath\">{this.state.mainarray[0].month.toUpperCase()}</th>\n                    {rows}\n                    <th className=\"resPath\" >AVERAGE</th>\n                  </tr >\n                </thead>\n                <tbody>\n                  <tr>\n                    <th className=\"resPath\" scope=\"row\" >INCOME</th>\n                    {rowsincome}\n                    <td className=\"resPath\">{xincome}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\" className=\"resPath\">EXPENSES</th>\n                    {rowsexpense}\n                    <td className=\"resPath\">{xexpense}</td>\n                    <td className=\"resPath\"></td>\n                  </tr>\n                  <tr>\n                    <th className=\"resPath\" scope=\"row\">SAVINGS</th>\n                    {rowsresult}\n                    <td className=\"resPath\"></td>\n                    <td className=\"resPath\"></td>\n                  </tr>\n                </tbody>\n              </table>\n            </form>\n\n          </div>\n          <div className=\"alert alert-primary\">\n            <p className=\"footer\"><strong>2018</strong></p>\n\n          </div>\n        </div >\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\"></nav>\n\n\n        <LineChart width={600} height={300} data={data}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} strokeDasharray=\"5 5\" />\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" strokeDasharray=\"3 4 5 2\" />\n        </LineChart>\n\n\n      </div>\n\n\n\n    );\n  }\n}\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}