{"ast":null,"code":"import _classCallCheck from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/src/App.js\";\n// 1. CREAR UN TABLA DE PRESUPUESTO ANUAL (BUDGET + 12 MESES CON INCOME, EXPENSES, RESULT)\n// 2. CAMPOS MODIFICABLES\n// 3. Campos calculados automaticamente en linea\n// 4. Se trae de la base de datos, como datos precargados\n// 5. SE MUESTRE EL ARRAY GRABADO DE LA BASE DE DATOS\n// 4. SE GUARDE EN UNA BASE DE DATOS LOS CAMBIOS MONGODB\n// DESEABLES\n// PLATILLA POR USUARIO\n// PLANTILLA POR AÃ‘O\n// PLANTILLA EN LA QUE SE PUEDAN AGREGAR MAS FILAS PARA CALCULOS DETALLADOS\n// PODER IMPRIMIR A PDF EL FORMATO\n// FORMATO CON OTRAS CARACTERISTICAS\n// GRAFICAR FORMATO\n// AQUI EL COMPONENTE PRINCIPAL\nimport React, { Component } from \"react\";\nimport update from 'react-addons-update'; // ES6\n\nimport API from \"./utils/API\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport ReactDOM from 'react-dom';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryStack } from 'victory';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.loadBudget = function () {\n      API.getBudget().then(function (res) {\n        _this.setState({\n          mainarray: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var target = event.target;\n      var value = parseFloat(target.value);\n      var month = target.dataset.month;\n      var newstate = {};\n\n      if (target.name === \"income\") {\n        newstate[month.toString()] = {\n          income: {\n            $set: value\n          }\n        };\n      } else {\n        newstate[month.toString()] = {\n          expense: {\n            $set: value\n          }\n        };\n      }\n\n      _this.setState({\n        mainarray: update(_this.state.mainarray, newstate)\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      console.log(_this.state.mainarray);\n      event.preventDefault();\n      API.updateBudget(_this.state.mainarray) // aqui mando el objeto como esta en el dom para actualizar\n      .then(function (res) {\n        return _this.loadBudget();\n      }) // con el resultado reresamos el json actualizado y lo carga\n      .catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      mainarray: [{\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }]\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBudget();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // DATOS PARA GRAFICAS\n      var data2012 = [{\n        quarter: 1,\n        earnings: 13000\n      }, {\n        quarter: 2,\n        earnings: 16500\n      }, {\n        quarter: 3,\n        earnings: 14250\n      }, {\n        quarter: 4,\n        earnings: 19000\n      }];\n      var data2013 = [{\n        quarter: 1,\n        earnings: 15000\n      }, {\n        quarter: 2,\n        earnings: 12500\n      }, {\n        quarter: 3,\n        earnings: 19500\n      }, {\n        quarter: 4,\n        earnings: 13000\n      }];\n      var data2014 = [{\n        quarter: 1,\n        earnings: 11500\n      }, {\n        quarter: 2,\n        earnings: 13250\n      }, {\n        quarter: 3,\n        earnings: 20000\n      }, {\n        quarter: 4,\n        earnings: 15500\n      }];\n      var data2015 = [{\n        quarter: 1,\n        earnings: 18000\n      }, {\n        quarter: 2,\n        earnings: 13250\n      }, {\n        quarter: 3,\n        earnings: 15000\n      }, {\n        quarter: 4,\n        earnings: 12000\n      }]; // CALCULOS\n\n      var xincome = 0;\n      var x1 = 0;\n      var x2 = 0;\n      var xexpense = 0;\n      var i;\n\n      for (i = 1; i < this.state.mainarray.length; i++) {\n        x1 += parseFloat(this.state.mainarray[i].income);\n        xincome = (x1 / 12).toFixed(2);\n        x2 += parseFloat(this.state.mainarray[i].expense);\n        xexpense = (x2 / 12).toFixed(2);\n      }\n\n      ; // loop para encabezados\n\n      var rows = [];\n\n      for (var _i = 1; _i < 13; _i++) {\n        rows.push(React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"theader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, this.state.mainarray[_i].month.toUpperCase()));\n      } // loop para income\n\n\n      var rowsincome = [];\n\n      for (var _i2 = 0; _i2 < 13; _i2++) {\n        rowsincome.push(React.createElement(\"td\", {\n          className: \"resPath\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          className: \"inputSquare\",\n          name: \"income\",\n          \"data-month\": _i2,\n          value: this.state.mainarray[_i2].income,\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        })));\n      } // loop para expense\n\n\n      var rowsexpense = [];\n\n      for (var _i3 = 0; _i3 < 13; _i3++) {\n        rowsexpense.push(React.createElement(\"td\", {\n          className: \"resPath\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          className: \"inputSquare\",\n          name: \"expense\",\n          \"data-month\": _i3,\n          value: this.state.mainarray[_i3].expense,\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        })));\n      } // loop results income - expense\n\n\n      var rowsresult = [];\n\n      for (var _i4 = 0; _i4 < 13; _i4++) {\n        rowsresult.push(React.createElement(\"td\", {\n          className: \"resPath\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, this.state.mainarray[_i4].income - this.state.mainarray[_i4].expense));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"alert alert-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"PERSONAL FINANCE\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit All\",\n        className: \"btn btn-success\",\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      })), React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, this.state.mainarray[0].month.toUpperCase()), rows, React.createElement(\"th\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"AVERAGE\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"resPath\",\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"INCOME\"), rowsincome, React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, xincome)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"EXPENSES\"), rowsexpense, React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, xexpense), React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      })), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"resPath\",\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"SAVINGS\"), rowsresult, React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(VictoryChart, {\n        domainPadding: 5,\n        theme: VictoryTheme.material,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(VictoryAxis, {\n        tickValues: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }), React.createElement(VictoryAxis, {\n        dependentAxis: true,\n        tickFormat: function tickFormat(x) {\n          return \"$\".concat(x / 1000, \"k\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(VictoryStack, {\n        colorScale: \"warm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(VictoryBar, {\n        data: data2012,\n        x: \"quarter\",\n        y: \"earnings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }), React.createElement(VictoryBar, {\n        data: data2013,\n        x: \"quarter\",\n        y: \"earnings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }), React.createElement(VictoryBar, {\n        data: data2014,\n        x: \"quarter\",\n        y: \"earnings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(VictoryBar, {\n        data: data2015,\n        x: \"quarter\",\n        y: \"earnings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"alert alert-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"2018 Anual Budget\")))), React.createElement(\"nav\", {\n        className: \"navbar navbar-expand-lg navbar-dark bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/egomezmo/Bootcamp/AAA/BUDGET/client/src/App.js"],"names":["React","Component","update","API","Nav","ReactDOM","VictoryBar","VictoryChart","VictoryAxis","VictoryTheme","VictoryStack","App","props","loadBudget","getBudget","then","res","setState","mainarray","data","catch","err","console","log","handleInputChange","event","target","value","parseFloat","month","dataset","newstate","name","toString","income","$set","expense","state","handleFormSubmit","preventDefault","updateBudget","bind","data2012","quarter","earnings","data2013","data2014","data2015","xincome","x1","x2","xexpense","i","length","toFixed","rows","push","toUpperCase","rowsincome","rowsexpense","rowsresult","material","x"],"mappings":"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","sourcesContent":["// 1. CREAR UN TABLA DE PRESUPUESTO ANUAL (BUDGET + 12 MESES CON INCOME, EXPENSES, RESULT)\n// 2. CAMPOS MODIFICABLES\n// 3. Campos calculados automaticamente en linea\n// 4. Se trae de la base de datos, como datos precargados\n// 5. SE MUESTRE EL ARRAY GRABADO DE LA BASE DE DATOS\n\n// 4. SE GUARDE EN UNA BASE DE DATOS LOS CAMBIOS MONGODB\n\n// DESEABLES\n// PLATILLA POR USUARIO\n// PLANTILLA POR AÃ‘O\n// PLANTILLA EN LA QUE SE PUEDAN AGREGAR MAS FILAS PARA CALCULOS DETALLADOS\n// PODER IMPRIMIR A PDF EL FORMATO\n// FORMATO CON OTRAS CARACTERISTICAS\n// GRAFICAR FORMATO\n\n\n// AQUI EL COMPONENTE PRINCIPAL\n\nimport React, { Component } from \"react\";\nimport update from 'react-addons-update'; // ES6\nimport API from \"./utils/API\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\n\nimport ReactDOM from 'react-dom';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryStack } from 'victory';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      mainarray: [\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        }, {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        }\n      ]\n\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadBudget();\n  }\n\n  loadBudget = () => {\n    API.getBudget()\n      .then(res => { this.setState({ mainarray: res.data }) })\n      .catch(err => console.log(err));\n  };\n\n  // PARA INGRESAR LOS CAMBIOS DE CADA CAMPO\n  handleInputChange = event => {\n    const target = event.target;\n    const value = parseFloat(target.value);\n    const month = target.dataset.month;\n    let newstate = {};\n    if (target.name === \"income\") {\n      newstate[month.toString()] = { income: { $set: value } };\n    }\n    else {\n      newstate[month.toString()] = { expense: { $set: value } };\n    }\n    this.setState({\n      mainarray: update(this.state.mainarray, newstate)\n    })\n  }\n\n  // SUBIR TODO EL FORMARTO CON EL BOTON\n  handleFormSubmit = event => {\n    console.log(this.state.mainarray);\n    event.preventDefault();\n    API.updateBudget(this.state.mainarray)\n\n\n      // aqui mando el objeto como esta en el dom para actualizar\n\n\n\n      .then(res => this.loadBudget())       // con el resultado reresamos el json actualizado y lo carga\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    // DATOS PARA GRAFICAS\n\n    const data2012 = [\n      { quarter: 1, earnings: 13000 },\n      { quarter: 2, earnings: 16500 },\n      { quarter: 3, earnings: 14250 },\n      { quarter: 4, earnings: 19000 }\n    ];\n\n    const data2013 = [\n      { quarter: 1, earnings: 15000 },\n      { quarter: 2, earnings: 12500 },\n      { quarter: 3, earnings: 19500 },\n      { quarter: 4, earnings: 13000 }\n    ];\n\n    const data2014 = [\n      { quarter: 1, earnings: 11500 },\n      { quarter: 2, earnings: 13250 },\n      { quarter: 3, earnings: 20000 },\n      { quarter: 4, earnings: 15500 }\n    ];\n\n    const data2015 = [\n      { quarter: 1, earnings: 18000 },\n      { quarter: 2, earnings: 13250 },\n      { quarter: 3, earnings: 15000 },\n      { quarter: 4, earnings: 12000 }\n    ];\n\n    // CALCULOS\n\n    let xincome = 0;\n    let x1 = 0;\n    let x2 = 0;\n    let xexpense = 0;\n    let i;\n    for (i = 1; i < this.state.mainarray.length; i++) {\n      x1 += parseFloat(this.state.mainarray[i].income);\n      xincome = (x1 / 12).toFixed(2);\n      x2 += parseFloat(this.state.mainarray[i].expense);\n      xexpense = (x2 / 12).toFixed(2);\n    };\n\n    // loop para encabezados\n    let rows = [];\n    for (let i = 1; i < 13; i++) {\n      rows.push(<th scope=\"col\" className=\"theader\">{this.state.mainarray[i].month.toUpperCase()}</th>);\n    }\n\n    // loop para income\n    let rowsincome = [];\n    for (let i = 0; i < 13; i++) {\n      rowsincome.push(<td className=\"resPath\"><input type=\"number\" className=\"inputSquare\" name=\"income\" data-month={i} value={this.state.mainarray[i].income} onChange={this.handleInputChange} /></td>);\n    }\n\n    // loop para expense\n    let rowsexpense = [];\n    for (let i = 0; i < 13; i++) {\n      rowsexpense.push(<td className=\"resPath\"><input type=\"number\" className=\"inputSquare\" name=\"expense\" data-month={i} value={this.state.mainarray[i].expense} onChange={this.handleInputChange} /></td>);\n    }\n\n    // loop results income - expense\n    let rowsresult = [];\n    for (let i = 0; i < 13; i++) {\n      rowsresult.push(<td className=\"resPath\">{this.state.mainarray[i].income - this.state.mainarray[i].expense}</td>);\n    }\n\n    return (\n      <div>\n        <Nav />\n        <br />\n        <div className=\"container\">\n          <div className=\"alert alert-primary\">\n            <h2>PERSONAL FINANCE</h2>\n          </div>\n          <div>\n            <form>\n              <table className=\"table table-sm\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\"><input type=\"submit\" value=\"Submit All\" className=\"btn btn-success\" onClick={this.handleFormSubmit} /></th>\n                    <th scope=\"col\" className=\"resPath\">{this.state.mainarray[0].month.toUpperCase()}</th>\n                    {rows}\n                    <th className=\"resPath\" >AVERAGE</th>\n                  </tr >\n                </thead>\n                <tbody>\n                  <tr>\n                    <th className=\"resPath\" scope=\"row\" >INCOME</th>\n                    {rowsincome}\n                    <td className=\"resPath\">{xincome}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\" className=\"resPath\">EXPENSES</th>\n                    {rowsexpense}\n                    <td className=\"resPath\">{xexpense}</td>\n                    <td className=\"resPath\"></td>\n                  </tr>\n                  <tr>\n                    <th className=\"resPath\" scope=\"row\">SAVINGS</th>\n                    {rowsresult}\n                    <td className=\"resPath\"></td>\n                    <td className=\"resPath\"></td>\n                  </tr>\n                </tbody>\n              </table>\n            </form>\n            <hr />\n\n            <div className=\"container\">\n\n              <VictoryChart domainPadding={5} theme={VictoryTheme.material}>\n                <VictoryAxis tickValues={[\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\"]} />\n                <VictoryAxis dependentAxis tickFormat={(x) => (`$${x / 1000}k`)} />\n                <VictoryStack colorScale={\"warm\"}>\n                  <VictoryBar\ndata={data2012}\n                    x={\"quarter\"}\n                    y={\"earnings\"}\n                  />\n                  <VictoryBar\n                    data={data2013}\n                    x={\"quarter\"}\n                    y={\"earnings\"}\n                  />\n                  <VictoryBar\n                    data={data2014}\n                    x={\"quarter\"}\n                    y={\"earnings\"}\n                  />\n                  <VictoryBar\n                    data={data2015}\n                    x={\"quarter\"}\n                    y={\"earnings\"}\n                  />\n                </VictoryStack>\n              </VictoryChart>\n\n            </div>\n\n\n\n          </div>\n          <div className=\"alert alert-primary\">\n            <p className=\"footer\"><strong>2018 Anual Budget</strong></p>\n\n          </div>\n        </div >\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\"></nav>\n        <br />\n\n\n\n\n      </div>\n\n\n\n\n    );\n  }\n}\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}