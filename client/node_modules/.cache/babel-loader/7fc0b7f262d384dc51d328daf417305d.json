{"ast":null,"code":"import _classCallCheck from \"/Users/egomezmo/Bootcamp/AAA/testings-forms/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/egomezmo/Bootcamp/AAA/testings-forms/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/egomezmo/Bootcamp/AAA/testings-forms/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/egomezmo/Bootcamp/AAA/testings-forms/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/egomezmo/Bootcamp/AAA/testings-forms/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/egomezmo/Bootcamp/AAA/testings-forms/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/egomezmo/Bootcamp/AAA/testings-forms/client/src/components/Anualbudget/index.js\";\nimport React, { Component } from \"react\";\nimport update from 'react-addons-update'; // ES6\n\nimport API from \"../../utils/API\";\nimport \"./App.css\"; // import ReactDOM from 'react-dom';\n\nimport { VictoryChart, VictoryLine, VictoryTheme } from 'victory';\n\nvar Anualbudget =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Anualbudget, _Component);\n\n  function Anualbudget(props) {\n    var _this;\n\n    _classCallCheck(this, Anualbudget);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Anualbudget).call(this, props));\n\n    _this.loadBudget = function () {\n      API.getBudget().then(function (res) {\n        _this.setState({\n          mainarray: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var target = event.target;\n      var value = parseFloat(target.value);\n      var month = target.dataset.month;\n      var newstate = {};\n\n      if (target.name === \"income\") {\n        newstate[month.toString()] = {\n          income: {\n            $set: value\n          }\n        };\n      } else {\n        newstate[month.toString()] = {\n          expense: {\n            $set: value\n          }\n        };\n      }\n\n      _this.setState({\n        mainarray: update(_this.state.mainarray, newstate)\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      console.log(_this.state.mainarray);\n      event.preventDefault();\n      API.updateBudget(_this.state.mainarray) // aqui mando el objeto como esta en el dom para actualizar\n      .then(function (res) {\n        return _this.loadBudget();\n      }) // con el resultado reresamos el json actualizado y lo carga\n      .catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      mainarray: [{\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }]\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Anualbudget, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBudget();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // CALCULOS\n      var xincome = 0;\n      var x1 = 0;\n      var x2 = 0;\n      var xexpense = 0;\n      var i;\n\n      for (i = 1; i < this.state.mainarray.length; i++) {\n        x1 += parseFloat(this.state.mainarray[i].income);\n        xincome = (x1 / 12).toFixed(2);\n        x2 += parseFloat(this.state.mainarray[i].expense);\n        xexpense = (x2 / 12).toFixed(2);\n      }\n\n      ; // loop para encabezados\n\n      var rows = [];\n\n      for (var _i = 1; _i < 13; _i++) {\n        rows.push(React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"theader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, this.state.mainarray[_i].month.toUpperCase()));\n      } // loop para income\n\n\n      var rowsincome = [];\n\n      for (var _i2 = 0; _i2 < 13; _i2++) {\n        rowsincome.push(React.createElement(\"td\", {\n          className: \"resPath\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          className: \"inputSquare\",\n          name: \"income\",\n          \"data-month\": _i2,\n          value: this.state.mainarray[_i2].income,\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        })));\n      } // loop para expense\n\n\n      var rowsexpense = [];\n\n      for (var _i3 = 0; _i3 < 13; _i3++) {\n        rowsexpense.push(React.createElement(\"td\", {\n          className: \"resPath\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          className: \"inputSquare\",\n          name: \"expense\",\n          \"data-month\": _i3,\n          value: this.state.mainarray[_i3].expense,\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        })));\n      } // loop results income - expense\n\n\n      var rowsresult = [];\n\n      for (var _i4 = 0; _i4 < 13; _i4++) {\n        rowsresult.push(React.createElement(\"td\", {\n          className: \"resPath\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, this.state.mainarray[_i4].income - this.state.mainarray[_i4].expense));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"alert alert-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"PERSONAL FINANCE\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit All\",\n        className: \"btn btn-success\",\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, this.state.mainarray[0].month.toUpperCase()), rows, React.createElement(\"th\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"AVERAGE\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"resPath\",\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"INCOME\"), rowsincome, React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, xincome)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"EXPENSES\"), rowsexpense, React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, xexpense), React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      })), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"resPath\",\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"SAVINGS\"), rowsresult, React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(VictoryChart, {\n        width: 500,\n        height: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(VictoryLine, {\n        interpolation: \"basis\",\n        style: {\n          data: {\n            stroke: \"green\"\n          }\n        },\n        data: [{\n          x: \".\",\n          y: \"\"\n        }, {\n          x: \"J\",\n          y: this.state.mainarray[1].income\n        }, {\n          x: \"F\",\n          y: this.state.mainarray[2].income\n        }, {\n          x: \"M\",\n          y: this.state.mainarray[3].income\n        }, {\n          x: \"A\",\n          y: this.state.mainarray[4].income\n        }, {\n          x: \"M\",\n          y: this.state.mainarray[5].income\n        }, {\n          x: \"J\",\n          y: this.state.mainarray[6].income\n        }, {\n          x: \"J\",\n          y: this.state.mainarray[7].income\n        }, {\n          x: \"A\",\n          y: this.state.mainarray[8].income\n        }, {\n          x: \"S\",\n          y: this.state.mainarray[9].income\n        }, {\n          x: \"O\",\n          y: this.state.mainarray[10].income\n        }, {\n          x: \"N\",\n          y: this.state.mainarray[11].income\n        }, {\n          x: \"D\",\n          y: this.state.mainarray[12].income\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(VictoryLine, {\n        interpolation: \"basis\",\n        style: {\n          data: {\n            stroke: \"red\"\n          }\n        },\n        data: [{\n          x: \".\",\n          y: \"\"\n        }, {\n          x: \"J\",\n          y: this.state.mainarray[1].expense\n        }, {\n          x: \"F\",\n          y: this.state.mainarray[2].expense\n        }, {\n          x: \"M\",\n          y: this.state.mainarray[3].expense\n        }, {\n          x: \"A\",\n          y: this.state.mainarray[4].expense\n        }, {\n          x: \"M\",\n          y: this.state.mainarray[5].expense\n        }, {\n          x: \"J\",\n          y: this.state.mainarray[6].expense\n        }, {\n          x: \"J\",\n          y: this.state.mainarray[7].expense\n        }, {\n          x: \"A\",\n          y: this.state.mainarray[8].expense\n        }, {\n          x: \"S\",\n          y: this.state.mainarray[9].expense\n        }, {\n          x: \"O\",\n          y: this.state.mainarray[10].expense\n        }, {\n          x: \"N\",\n          y: this.state.mainarray[11].expense\n        }, {\n          x: \"D\",\n          y: this.state.mainarray[12].expense\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(VictoryLine, {\n        interpolation: \"basis\",\n        style: {\n          data: {\n            stroke: \"blue\"\n          }\n        },\n        data: [{\n          x: \".\",\n          y: \"\"\n        }, {\n          x: \"J\",\n          y: this.state.mainarray[1].income - this.state.mainarray[1].expense\n        }, {\n          x: \"F\",\n          y: this.state.mainarray[2].income - this.state.mainarray[2].expense\n        }, {\n          x: \"M\",\n          y: this.state.mainarray[3].income - this.state.mainarray[3].expense\n        }, {\n          x: \"A\",\n          y: this.state.mainarray[4].income - this.state.mainarray[4].expense\n        }, {\n          x: \"M\",\n          y: this.state.mainarray[5].income - this.state.mainarray[5].expense\n        }, {\n          x: \"J\",\n          y: this.state.mainarray[6].income - this.state.mainarray[6].expense\n        }, {\n          x: \"J\",\n          y: this.state.mainarray[7].income - this.state.mainarray[7].expense\n        }, {\n          x: \"A\",\n          y: this.state.mainarray[8].income - this.state.mainarray[8].expense\n        }, {\n          x: \"S\",\n          y: this.state.mainarray[9].income - this.state.mainarray[9].expense\n        }, {\n          x: \"O\",\n          y: this.state.mainarray[10].income - this.state.mainarray[10].expense\n        }, {\n          x: \"N\",\n          y: this.state.mainarray[11].income - this.state.mainarray[11].expense\n        }, {\n          x: \"D\",\n          y: this.state.mainarray[12].income - this.state.mainarray[12].expense\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"alert alert-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"2018 Anual Budget\")))));\n    }\n  }]);\n\n  return Anualbudget;\n}(Component);\n\nexport default Anualbudget;","map":{"version":3,"sources":["/Users/egomezmo/Bootcamp/AAA/testings-forms/client/src/components/Anualbudget/index.js"],"names":["React","Component","update","API","VictoryChart","VictoryLine","VictoryTheme","Anualbudget","props","loadBudget","getBudget","then","res","setState","mainarray","data","catch","err","console","log","handleInputChange","event","target","value","parseFloat","month","dataset","newstate","name","toString","income","$set","expense","state","handleFormSubmit","preventDefault","updateBudget","bind","xincome","x1","x2","xexpense","i","length","toFixed","rows","push","toUpperCase","rowsincome","rowsexpense","rowsresult","stroke","x","y"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport update from 'react-addons-update'; // ES6\nimport API from \"../../utils/API\";\nimport \"./App.css\";\n\n\n// import ReactDOM from 'react-dom';\n\n\nimport { VictoryChart, VictoryLine, VictoryTheme } from 'victory';\n\nclass Anualbudget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      mainarray: [\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        }, {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        }\n      ]\n\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadBudget();\n  }\n\n  loadBudget = () => {\n    API.getBudget()\n      .then(res => { this.setState({ mainarray: res.data }) })\n      .catch(err => console.log(err));\n  };\n\n  // PARA INGRESAR LOS CAMBIOS DE CADA CAMPO\n  handleInputChange = event => {\n    const target = event.target;\n    const value = parseFloat(target.value);\n    const month = target.dataset.month;\n    let newstate = {};\n    if (target.name === \"income\") {\n      newstate[month.toString()] = { income: { $set: value } };\n    }\n    else {\n      newstate[month.toString()] = { expense: { $set: value } };\n    }\n    this.setState({\n      mainarray: update(this.state.mainarray, newstate)\n    })\n  }\n\n  // SUBIR TODO EL FORMARTO CON EL BOTON\n  handleFormSubmit = event => {\n    console.log(this.state.mainarray);\n    event.preventDefault();\n    API.updateBudget(this.state.mainarray)\n\n\n      // aqui mando el objeto como esta en el dom para actualizar\n\n\n\n      .then(res => this.loadBudget())       // con el resultado reresamos el json actualizado y lo carga\n      .catch(err => console.log(err));\n  };\n\n  render() {\n\n    // CALCULOS\n\n    let xincome = 0;\n    let x1 = 0;\n    let x2 = 0;\n    let xexpense = 0;\n    let i;\n    for (i = 1; i < this.state.mainarray.length; i++) {\n      x1 += parseFloat(this.state.mainarray[i].income);\n      xincome = (x1 / 12).toFixed(2);\n      x2 += parseFloat(this.state.mainarray[i].expense);\n      xexpense = (x2 / 12).toFixed(2);\n    };\n\n    // loop para encabezados\n    let rows = [];\n    for (let i = 1; i < 13; i++) {\n      rows.push(<th scope=\"col\" className=\"theader\">{this.state.mainarray[i].month.toUpperCase()}</th>);\n    }\n\n    // loop para income\n    let rowsincome = [];\n    for (let i = 0; i < 13; i++) {\n      rowsincome.push(<td className=\"resPath\"><input type=\"number\" className=\"inputSquare\" name=\"income\" data-month={i} value={this.state.mainarray[i].income} onChange={this.handleInputChange} /></td>);\n    }\n\n    // loop para expense\n    let rowsexpense = [];\n    for (let i = 0; i < 13; i++) {\n      rowsexpense.push(<td className=\"resPath\"><input type=\"number\" className=\"inputSquare\" name=\"expense\" data-month={i} value={this.state.mainarray[i].expense} onChange={this.handleInputChange} /></td>);\n    }\n\n    // loop results income - expense\n    let rowsresult = [];\n    for (let i = 0; i < 13; i++) {\n      rowsresult.push(<td className=\"resPath\">{this.state.mainarray[i].income - this.state.mainarray[i].expense}</td>);\n    }\n\n    return (\n      <div>\n      \n        <br />\n        <div className=\"container\">\n          <div className=\"alert alert-primary\">\n            <h2>PERSONAL FINANCE</h2>\n          </div>\n          <div>\n            <form>\n              <table className=\"table table-sm\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\"><input type=\"submit\" value=\"Submit All\" className=\"btn btn-success\" onClick={this.handleFormSubmit} /></th>\n                    <th scope=\"col\" className=\"resPath\">{this.state.mainarray[0].month.toUpperCase()}</th>\n                    {rows}\n                    <th className=\"resPath\" >AVERAGE</th>\n                  </tr >\n                </thead>\n                <tbody>\n                  <tr>\n                    <th className=\"resPath\" scope=\"row\" >INCOME</th>\n                    {rowsincome}\n                    <td className=\"resPath\">{xincome}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\" className=\"resPath\">EXPENSES</th>\n                    {rowsexpense}\n                    <td className=\"resPath\">{xexpense}</td>\n                    <td className=\"resPath\"></td>\n                  </tr>\n                  <tr>\n                    <th className=\"resPath\" scope=\"row\">SAVINGS</th>\n                    {rowsresult}\n                    <td className=\"resPath\"></td>\n                    <td className=\"resPath\"></td>\n                  </tr>\n                </tbody>\n              </table>\n            </form>\n\n            <div className=\"container\">\n              <VictoryChart\n              width={500}\n              height={200}\n              >\n\n                <VictoryLine\n                interpolation=\"basis\"\n\n                  style={{\n                    data: {\n                      stroke: \"green\"\n                  \n                    }\n                  }}\n                  \n                  data={[\n                    { x: \".\", y: \"\" },\n                    { x: \"J\", y: this.state.mainarray[1].income },\n                    { x: \"F\", y: this.state.mainarray[2].income },\n                    { x: \"M\", y: this.state.mainarray[3].income },\n                    { x: \"A\", y: this.state.mainarray[4].income },\n                    { x: \"M\", y: this.state.mainarray[5].income },\n                    { x: \"J\", y: this.state.mainarray[6].income },\n                    { x: \"J\", y: this.state.mainarray[7].income },\n                    { x: \"A\", y: this.state.mainarray[8].income },\n                    { x: \"S\", y: this.state.mainarray[9].income },\n                    { x: \"O\", y: this.state.mainarray[10].income },\n                    { x: \"N\", y: this.state.mainarray[11].income },\n                    { x: \"D\", y: this.state.mainarray[12].income }\n                  ]}\n                />\n\n                <VictoryLine\n                interpolation=\"basis\"\n                  style={{\n                    data: {\n                      stroke: \"red\"\n                      \n                    },\n                  }}\n                  data={[\n                    { x: \".\", y: \"\" },\n                    { x: \"J\", y: this.state.mainarray[1].expense },\n                    { x: \"F\", y: this.state.mainarray[2].expense },\n                    { x: \"M\", y: this.state.mainarray[3].expense },\n                    { x: \"A\", y: this.state.mainarray[4].expense },\n                    { x: \"M\", y: this.state.mainarray[5].expense },\n                    { x: \"J\", y: this.state.mainarray[6].expense },\n                    { x: \"J\", y: this.state.mainarray[7].expense },\n                    { x: \"A\", y: this.state.mainarray[8].expense },\n                    { x: \"S\", y: this.state.mainarray[9].expense },\n                    { x: \"O\", y: this.state.mainarray[10].expense },\n                    { x: \"N\", y: this.state.mainarray[11].expense },\n                    { x: \"D\", y: this.state.mainarray[12].expense }\n                  ]}\n\n                />\n\n                <VictoryLine\n                \n                interpolation=\"basis\"\n                  style={{\n                    data: {\n                      stroke: \"blue\"\n                    }\n                  }}\n                  data={[\n                    { x: \".\", y: \"\" },\n                    { x: \"J\", y: (this.state.mainarray[1].income - this.state.mainarray[1].expense) },\n                    { x: \"F\", y: (this.state.mainarray[2].income - this.state.mainarray[2].expense) },\n                    { x: \"M\", y: (this.state.mainarray[3].income - this.state.mainarray[3].expense) },\n                    { x: \"A\", y: (this.state.mainarray[4].income - this.state.mainarray[4].expense) },\n                    { x: \"M\", y: (this.state.mainarray[5].income - this.state.mainarray[5].expense) },\n                    { x: \"J\", y: (this.state.mainarray[6].income - this.state.mainarray[6].expense) },\n                    { x: \"J\", y: (this.state.mainarray[7].income - this.state.mainarray[7].expense) },\n                    { x: \"A\", y: (this.state.mainarray[8].income - this.state.mainarray[8].expense) },\n                    { x: \"S\", y: (this.state.mainarray[9].income - this.state.mainarray[9].expense) },\n                    { x: \"O\", y: (this.state.mainarray[10].income - this.state.mainarray[10].expense) },\n                    { x: \"N\", y: (this.state.mainarray[11].income - this.state.mainarray[11].expense) },\n                    { x: \"D\", y: (this.state.mainarray[12].income - this.state.mainarray[12].expense) }\n                  ]}\n                />\n              </VictoryChart>\n            </div>\n          </div>\n          <div className=\"alert alert-primary\">\n            <p className=\"footer\"><strong>2018 Anual Budget</strong></p>\n\n          </div>\n        </div >\n      </div>\n\n\n\n\n    );\n  }\n}\n\n\n\nexport default Anualbudget;"]},"metadata":{},"sourceType":"module"}