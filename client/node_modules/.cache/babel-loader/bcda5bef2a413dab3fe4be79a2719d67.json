{"ast":null,"code":"import _assertThisInitialized from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/egomezmo/Bootcamp/AAA/BUDGET/client/src/App.js\";\n// 1. CREAR UN TABLA DE PRESUPUESTO ANUAL (BUDGET + 12 MESES CON INCOME, EXPENSES, RESULT)\n// 2. CAMPOS MODIFICABLES\n// 3. Campos calculados automaticamente en linea\n// 4. Se trae de la base de datos, como datos precargados\n// 5. SE MUESTRE EL ARRAY GRABADO DE LA BASE DE DATOS\n// 4. SE GUARDE EN UNA BASE DE DATOS LOS CAMBIOS MONGODB\n// DESEABLES\n// PLATILLA POR USUARIO\n// PLANTILLA POR AÃ‘O\n// PLANTILLA EN LA QUE SE PUEDAN AGREGAR MAS FILAS PARA CALCULOS DETALLADOS\n// PODER IMPRIMIR A PDF EL FORMATO\n// FORMATO CON OTRAS CARACTERISTICAS\n// GRAFICAR FORMATO\n// AQUI EL COMPONENTE PRINCIPAL\nimport React, { Component } from \"react\";\nimport update from 'react-addons-update'; // ES6\n\nimport API from \"./utils/API\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\"; // import Linear from \"./components/Linear\";\n// import ReactDOM from 'react-dom';\n// import { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryStack } from 'victory';\n\nimport { VictoryChart, VictoryVoronoiContainer, VictoryLine, VictoryTooltip } from 'victory';\n\nvar Linear =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Linear, _React$Component);\n\n  function Linear() {\n    _classCallCheck(this, Linear);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Linear).apply(this, arguments));\n  }\n\n  _createClass(Linear, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(VictoryChart, {\n        height: 200,\n        width: 200,\n        domainPadding: {\n          y: 20\n        },\n        containerComponent: React.createElement(VictoryVoronoiContainer, {\n          voronoiDimension: \"x\",\n          labels: function labels(d) {\n            return \"y: \".concat(d.y);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(VictoryLine, {\n        data: [{\n          x: \"JAN\",\n          y: 5\n        }, {\n          x: 1.5,\n          y: 5\n        }, {\n          x: 2,\n          y: 4\n        }, {\n          x: 3,\n          y: 0\n        }],\n        style: {\n          data: {\n            stroke: \"tomato\",\n            strokeWidth: function strokeWidth(d, active) {\n              return active ? 2 : 1;\n            }\n          },\n          labels: {\n            fill: \"tomato\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(VictoryLine, {\n        data: [{\n          x: 1,\n          y: 0,\n          l: \"red\"\n        }, {\n          x: 2,\n          y: 5,\n          l: \"green\"\n        }, {\n          x: 3,\n          y: 3,\n          l: \"blue\"\n        }],\n        style: {\n          data: {\n            stroke: \"blue\",\n            strokeWidth: function strokeWidth(d, active) {\n              return active ? 2 : 1;\n            }\n          },\n          labels: {\n            fill: \"blue\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(VictoryLine, {\n        data: [{\n          x: 1,\n          y: 5,\n          l: \"cat\"\n        }, {\n          x: 2,\n          y: 0,\n          l: \"dog\"\n        }, {\n          x: 3,\n          y: 0,\n          l: \"bird\"\n        }],\n        style: {\n          data: {\n            stroke: \"black\",\n            strokeWidth: function strokeWidth(d, active) {\n              return active ? 2 : 1;\n            }\n          },\n          labels: {\n            fill: \"black\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Linear;\n}(React.Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.loadBudget = function () {\n      API.getBudget().then(function (res) {\n        _this.setState({\n          mainarray: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var target = event.target;\n      var value = parseFloat(target.value);\n      var month = target.dataset.month;\n      var newstate = {};\n\n      if (target.name === \"income\") {\n        newstate[month.toString()] = {\n          income: {\n            $set: value\n          }\n        };\n      } else {\n        newstate[month.toString()] = {\n          expense: {\n            $set: value\n          }\n        };\n      }\n\n      _this.setState({\n        mainarray: update(_this.state.mainarray, newstate)\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      console.log(_this.state.mainarray);\n      event.preventDefault();\n      API.updateBudget(_this.state.mainarray) // aqui mando el objeto como esta en el dom para actualizar\n      .then(function (res) {\n        return _this.loadBudget();\n      }) // con el resultado reresamos el json actualizado y lo carga\n      .catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      mainarray: [{\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }, {\n        month: \"\",\n        income: \"0\",\n        expense: \"0\"\n      }]\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBudget();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // DATOS PARA GRAFICAS\n      // const data2012 = [\n      //   { quarter: 1, earnings: 13000 },\n      //   { quarter: 2, earnings: 16500 },\n      //   { quarter: 3, earnings: 14250 },\n      //   { quarter: 4, earnings: 19000 }\n      // ];\n      // const data2013 = [\n      //   { quarter: 1, earnings: 15000 },\n      //   { quarter: 2, earnings: 12500 },\n      //   { quarter: 3, earnings: 19500 },\n      //   { quarter: 4, earnings: 13000 }\n      // ];\n      // const data2014 = [\n      //   { quarter: 1, earnings: 11500 },\n      //   { quarter: 2, earnings: 13250 },\n      //   { quarter: 3, earnings: 20000 },\n      //   { quarter: 4, earnings: 15500 }\n      // ];\n      // const data2015 = [\n      //   { quarter: 1, earnings: 18000 },\n      //   { quarter: 2, earnings: 13250 },\n      //   { quarter: 3, earnings: 15000 },\n      //   { quarter: 4, earnings: 12000 }\n      // ];\n      // CALCULOS\n      var xincome = 0;\n      var x1 = 0;\n      var x2 = 0;\n      var xexpense = 0;\n      var i;\n\n      for (i = 1; i < this.state.mainarray.length; i++) {\n        x1 += parseFloat(this.state.mainarray[i].income);\n        xincome = (x1 / 12).toFixed(2);\n        x2 += parseFloat(this.state.mainarray[i].expense);\n        xexpense = (x2 / 12).toFixed(2);\n      }\n\n      ; // loop para encabezados\n\n      var rows = [];\n\n      for (var _i = 1; _i < 13; _i++) {\n        rows.push(React.createElement(\"th\", {\n          scope: \"col\",\n          className: \"theader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, this.state.mainarray[_i].month.toUpperCase()));\n      } // loop para income\n\n\n      var rowsincome = [];\n\n      for (var _i2 = 0; _i2 < 13; _i2++) {\n        rowsincome.push(React.createElement(\"td\", {\n          className: \"resPath\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          className: \"inputSquare\",\n          name: \"income\",\n          \"data-month\": _i2,\n          value: this.state.mainarray[_i2].income,\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        })));\n      } // loop para expense\n\n\n      var rowsexpense = [];\n\n      for (var _i3 = 0; _i3 < 13; _i3++) {\n        rowsexpense.push(React.createElement(\"td\", {\n          className: \"resPath\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          className: \"inputSquare\",\n          name: \"expense\",\n          \"data-month\": _i3,\n          value: this.state.mainarray[_i3].expense,\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        })));\n      } // loop results income - expense\n\n\n      var rowsresult = [];\n\n      for (var _i4 = 0; _i4 < 13; _i4++) {\n        rowsresult.push(React.createElement(\"td\", {\n          className: \"resPath\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, this.state.mainarray[_i4].income - this.state.mainarray[_i4].expense));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"alert alert-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"PERSONAL FINANCE\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit All\",\n        className: \"btn btn-success\",\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      })), React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, this.state.mainarray[0].month.toUpperCase()), rows, React.createElement(\"th\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"AVERAGE\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"resPath\",\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"INCOME\"), rowsincome, React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, xincome)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"EXPENSES\"), rowsexpense, React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, xexpense), React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      })), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"resPath\",\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"SAVINGS\"), rowsresult, React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        className: \"resPath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(Linear, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"alert alert-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"2018 Anual Budget\")))), React.createElement(\"nav\", {\n        className: \"navbar navbar-expand-lg navbar-dark bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/egomezmo/Bootcamp/AAA/BUDGET/client/src/App.js"],"names":["React","Component","update","API","Nav","VictoryChart","VictoryVoronoiContainer","VictoryLine","VictoryTooltip","Linear","y","d","x","data","stroke","strokeWidth","active","labels","fill","l","App","props","loadBudget","getBudget","then","res","setState","mainarray","catch","err","console","log","handleInputChange","event","target","value","parseFloat","month","dataset","newstate","name","toString","income","$set","expense","state","handleFormSubmit","preventDefault","updateBudget","bind","xincome","x1","x2","xexpense","i","length","toFixed","rows","push","toUpperCase","rowsincome","rowsexpense","rowsresult"],"mappings":"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","sourcesContent":["// 1. CREAR UN TABLA DE PRESUPUESTO ANUAL (BUDGET + 12 MESES CON INCOME, EXPENSES, RESULT)\n// 2. CAMPOS MODIFICABLES\n// 3. Campos calculados automaticamente en linea\n// 4. Se trae de la base de datos, como datos precargados\n// 5. SE MUESTRE EL ARRAY GRABADO DE LA BASE DE DATOS\n\n// 4. SE GUARDE EN UNA BASE DE DATOS LOS CAMBIOS MONGODB\n\n// DESEABLES\n// PLATILLA POR USUARIO\n// PLANTILLA POR AÃ‘O\n// PLANTILLA EN LA QUE SE PUEDAN AGREGAR MAS FILAS PARA CALCULOS DETALLADOS\n// PODER IMPRIMIR A PDF EL FORMATO\n// FORMATO CON OTRAS CARACTERISTICAS\n// GRAFICAR FORMATO\n\n// AQUI EL COMPONENTE PRINCIPAL\n\nimport React, { Component } from \"react\";\nimport update from 'react-addons-update'; // ES6\nimport API from \"./utils/API\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\n\n// import Linear from \"./components/Linear\";\n\n// import ReactDOM from 'react-dom';\n// import { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryStack } from 'victory';\n\n\nimport { VictoryChart, VictoryVoronoiContainer, VictoryLine,VictoryTooltip } from 'victory';\n\n\nclass Linear extends React.Component {\n  render() {\n    return (\n      <VictoryChart height={200} width={200}\n        domainPadding={{ y: 20 }}\n        containerComponent={\n          <VictoryVoronoiContainer\n            voronoiDimension=\"x\"\n            labels={(d) => `y: ${d.y}`}\n            \n          />}\n      >\n        <VictoryLine\n          data={[\n            { x: \"JAN\", y: 5},\n            { x: 1.5, y: 5},\n            { x: 2, y: 4},\n            { x: 3, y: 0}\n          ]}\n          style={{\n            data: {\n              stroke: \"tomato\",\n              strokeWidth: (d, active) => {return active ? 2 : 1;}\n            },\n            labels: { fill: \"tomato\" }\n          }}\n        />\n\n        <VictoryLine\n          data={[\n            { x: 1, y: 0, l: \"red\" },\n            { x: 2, y: 5, l: \"green\" },\n            { x: 3, y: 3, l: \"blue\" }\n          ]}\n          style={{\n            data: {\n              stroke: \"blue\",\n              strokeWidth: (d, active) => {return active ? 2 : 1;}\n            },\n            labels: { fill: \"blue\" }\n          }}\n        />\n\n        <VictoryLine\n          data={[\n            { x: 1, y: 5, l: \"cat\" },\n            { x: 2, y: 0, l: \"dog\" },\n            { x: 3, y: 0, l: \"bird\" }\n          ]}\n          style={{\n            data: {\n              stroke: \"black\",\n              strokeWidth: (d, active) => {return active ? 2 : 1;}\n            },\n            labels: { fill: \"black\" }\n          }}\n        />\n      </VictoryChart>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      mainarray: [\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        }, {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        },\n        {\n          month: \"\",\n          income: \"0\",\n          expense: \"0\"\n        }\n      ]\n\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadBudget();\n  }\n\n  loadBudget = () => {\n    API.getBudget()\n      .then(res => { this.setState({ mainarray: res.data }) })\n      .catch(err => console.log(err));\n  };\n\n  // PARA INGRESAR LOS CAMBIOS DE CADA CAMPO\n  handleInputChange = event => {\n    const target = event.target;\n    const value = parseFloat(target.value);\n    const month = target.dataset.month;\n    let newstate = {};\n    if (target.name === \"income\") {\n      newstate[month.toString()] = { income: { $set: value } };\n    }\n    else {\n      newstate[month.toString()] = { expense: { $set: value } };\n    }\n    this.setState({\n      mainarray: update(this.state.mainarray, newstate)\n    })\n  }\n\n  // SUBIR TODO EL FORMARTO CON EL BOTON\n  handleFormSubmit = event => {\n    console.log(this.state.mainarray);\n    event.preventDefault();\n    API.updateBudget(this.state.mainarray)\n\n\n      // aqui mando el objeto como esta en el dom para actualizar\n\n\n\n      .then(res => this.loadBudget())       // con el resultado reresamos el json actualizado y lo carga\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    // DATOS PARA GRAFICAS\n\n    // const data2012 = [\n    //   { quarter: 1, earnings: 13000 },\n    //   { quarter: 2, earnings: 16500 },\n    //   { quarter: 3, earnings: 14250 },\n    //   { quarter: 4, earnings: 19000 }\n    // ];\n\n    // const data2013 = [\n    //   { quarter: 1, earnings: 15000 },\n    //   { quarter: 2, earnings: 12500 },\n    //   { quarter: 3, earnings: 19500 },\n    //   { quarter: 4, earnings: 13000 }\n    // ];\n\n    // const data2014 = [\n    //   { quarter: 1, earnings: 11500 },\n    //   { quarter: 2, earnings: 13250 },\n    //   { quarter: 3, earnings: 20000 },\n    //   { quarter: 4, earnings: 15500 }\n    // ];\n\n    // const data2015 = [\n    //   { quarter: 1, earnings: 18000 },\n    //   { quarter: 2, earnings: 13250 },\n    //   { quarter: 3, earnings: 15000 },\n    //   { quarter: 4, earnings: 12000 }\n    // ];\n\n    // CALCULOS\n\n    let xincome = 0;\n    let x1 = 0;\n    let x2 = 0;\n    let xexpense = 0;\n    let i;\n    for (i = 1; i < this.state.mainarray.length; i++) {\n      x1 += parseFloat(this.state.mainarray[i].income);\n      xincome = (x1 / 12).toFixed(2);\n      x2 += parseFloat(this.state.mainarray[i].expense);\n      xexpense = (x2 / 12).toFixed(2);\n    };\n\n    // loop para encabezados\n    let rows = [];\n    for (let i = 1; i < 13; i++) {\n      rows.push(<th scope=\"col\" className=\"theader\">{this.state.mainarray[i].month.toUpperCase()}</th>);\n    }\n\n    // loop para income\n    let rowsincome = [];\n    for (let i = 0; i < 13; i++) {\n      rowsincome.push(<td className=\"resPath\"><input type=\"number\" className=\"inputSquare\" name=\"income\" data-month={i} value={this.state.mainarray[i].income} onChange={this.handleInputChange} /></td>);\n    }\n\n    // loop para expense\n    let rowsexpense = [];\n    for (let i = 0; i < 13; i++) {\n      rowsexpense.push(<td className=\"resPath\"><input type=\"number\" className=\"inputSquare\" name=\"expense\" data-month={i} value={this.state.mainarray[i].expense} onChange={this.handleInputChange} /></td>);\n    }\n\n    // loop results income - expense\n    let rowsresult = [];\n    for (let i = 0; i < 13; i++) {\n      rowsresult.push(<td className=\"resPath\">{this.state.mainarray[i].income - this.state.mainarray[i].expense}</td>);\n    }\n\n    return (\n      <div>\n        <Nav />\n        <br />\n        <div className=\"container\">\n          <div className=\"alert alert-primary\">\n            <h2>PERSONAL FINANCE</h2>\n          </div>\n          <div>\n            <form>\n              <table className=\"table table-sm\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\"><input type=\"submit\" value=\"Submit All\" className=\"btn btn-success\" onClick={this.handleFormSubmit} /></th>\n                    <th scope=\"col\" className=\"resPath\">{this.state.mainarray[0].month.toUpperCase()}</th>\n                    {rows}\n                    <th className=\"resPath\" >AVERAGE</th>\n                  </tr >\n                </thead>\n                <tbody>\n                  <tr>\n                    <th className=\"resPath\" scope=\"row\" >INCOME</th>\n                    {rowsincome}\n                    <td className=\"resPath\">{xincome}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\" className=\"resPath\">EXPENSES</th>\n                    {rowsexpense}\n                    <td className=\"resPath\">{xexpense}</td>\n                    <td className=\"resPath\"></td>\n                  </tr>\n                  <tr>\n                    <th className=\"resPath\" scope=\"row\">SAVINGS</th>\n                    {rowsresult}\n                    <td className=\"resPath\"></td>\n                    <td className=\"resPath\"></td>\n                  </tr>\n                </tbody>\n              </table>\n            </form>\n            <hr />\n\n            <div className=\"container\">\n\n<Linear/>\n\n\n              {/* <VictoryChart domainPadding={5} theme={VictoryTheme.material}>\n                <VictoryAxis tickValues={[\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\"]} />\n                <VictoryAxis dependentAxis tickFormat={(x) => (`$${x / 1000}k`)} />\n                <VictoryStack colorScale={\"warm\"}>\n                  <VictoryBar\n                    data={data2012}\n                    x={\"quarter\"}\n                    y={\"earnings\"}\n                  />\n                  <VictoryBar\n                    data={data2013}\n                    x={\"quarter\"}\n                    y={\"earnings\"}\n                  />\n                  <VictoryBar\n                    data={data2014}\n                    x={\"quarter\"}\n                    y={\"earnings\"}\n                  />\n                  <VictoryBar\n                    data={data2015}\n                    x={\"quarter\"}\n                    y={\"earnings\"}\n                  />\n                </VictoryStack>\n              </VictoryChart> */}\n\n            </div>\n\n\n\n          </div>\n          <div className=\"alert alert-primary\">\n            <p className=\"footer\"><strong>2018 Anual Budget</strong></p>\n\n          </div>\n        </div >\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\"></nav>\n        <br />\n\n\n\n\n      </div>\n\n\n\n\n    );\n  }\n}\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}